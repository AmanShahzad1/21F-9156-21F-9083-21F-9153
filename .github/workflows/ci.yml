name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Cache Job
  cache:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Cache Ruby gems
        id: cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

  # Build Job
  build:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        env:
          TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my_ror_app:$TAG .
          docker push ${{ secrets.DOCKER_USERNAME }}/my_ror_app:$TAG

  # Unit Test Job
  test:
    runs-on: ubuntu-latest
    needs: [cache, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Unit Tests
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/my_ror_app:${{ github.sha }} bundle exec rspec
  

  # Linter Job
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies for rbenv
        run: |
          sudo apt-get update
          sudo apt-get install -y libreadline-dev libssl-dev zlib1g-dev git
          curl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-installer | bash
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
          echo 'eval "$(rbenv init -)"' >> ~/.bashrc
          source ~/.bashrc
          rbenv install 3.1.2
          rbenv global 3.1.2
          ruby -v

      - name: Install Bundler
        run: |
          source ~/.bashrc
          gem install bundler -v 2.3.11 --user-install
          echo "PATH=$PATH:$HOME/.local/share/gem/ruby/3.0.0/bin" >> $GITHUB_ENV
          echo "Bundler installed at: $(which bundler)"
        shell: bash

      - name: Update PATH for Bundler
        run: |
          source $GITHUB_ENV
          which bundle || echo "Bundle not found"
          bundle -v || echo "Bundle command still not found"
        shell: bash

      - name: Install dependencies with Bundler
        env:
          PATH: ${{ env.PATH }}:$HOME/.local/share/gem/ruby/3.0.0/bin
        run: |
          source ~/.bashrc
          bundle config set --local path 'vendor/bundle'
          bundle install

      - name: Run RuboCop
        run: |
          source ~/.bashrc
          bundle exec rubocop
          
             
  # SAST Job
  sast:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Brakeman for SAST
        run: |
          gem install brakeman --user-install
          echo "PATH=\$PATH:\$HOME/.local/share/gem/ruby/3.0.0/bin" >> $GITHUB_ENV
        shell: bash

      - name: Source updated PATH
        run: |
          source $GITHUB_ENV
          brakeman

  # Test results as artifacts
  upload-test-results:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: tmp/test-results
